

@book{coqart,
  author = {Yves Bertot and Pierre Cast{\'e}ran},
  title = {Interactive Theorem Proving and Program Development},
  publisher = sv,
  year = 2004,
}

@inproceedings{lehmannTanter:popl2017,
  author =  {Nico Lehmann and {\'E}ric Tanter},
  title = {Gradual Refinement Types},
  crossref = {popl2017},
  pages = {775--788},
  users = { etanter , nlehmann },
  urlpdf = {http://pleiad.dcc.uchile.cl/papers/2017/lehmannTanter-popl2017.pdf},
  urldoi = {http://dx.doi.org/10.1145/3009837.3009856},
}


@proceedings{popl2017,
  key = {POPL 2017},
  booktitle = {Proceedings of the 44th {ACM SIGPLAN-SIGACT} Symposium on Principles of Programming Languages (POPL 2017)},
  title = {Proceedings of the 44th {ACM SIGPLAN-SIGACT} Symposium on Principles of Programming Languages (POPL 2017)},
  year = 2017,
  address = {Paris, France},
  month = jan,
  publisher = acm,
}

@inproceedings{sergeyClarke:esop2012,
  author = {Ilya Sergey and Dave Clarke},
  title = {Gradual Ownership Types},
  crossref = {esop2012},
  pages = {579--599},
}
@proceedings{esop2012,
  key = {ESOP 2012},
  booktitle = {Proceedings of the 21st European Symposium on Programming Languages and Systems (ESOP 2012)},
  title = {Proceedings of the 21st European Symposium on Programming Languages and Systems (ESOP 2012)},
  editor = {Helmut Seidl},
  publisher =  sv,
  series = lncs,
  volume = 7211,
  year = 2012,
  address = {Tallinn, Estonia},
}


@inproceedings{fennellThiemann:csf2013,
  author = {Luminous Fennell and Peter Thiemann},
  title = {Gradual Security Typing with References},
  booktitle = {Proceedings of the 26th Computer Security Foundations Symposium (CSF)},
  pages = {224--239},
  year = 2013,
  month = jun,
}
@article{toroAl:toplas2018,
  author = {Mat{\'i}as Toro and Ronald Garcia and {\'E}ric Tanter},
  title = {Type-Driven Gradual Security with References},
  journal = toplas, 
  publisher = acm,
  pages = {16:1--16:55},
  volume = 40,
  number = 4,
  year = 2018,
  month = nov,
  users = { etanter , mtoro },
  urlpdf = {http://pleiad.dcc.uchile.cl/papers/2018/toroAl-toplas2018.pdf},
  urldoi = {https://doi.org/10.1145/3229061},
  webnote = {Presented at POPL 2019},
}
@article{banadosAl:jfp2016,
  author = {Ba{\~n}ados Schwerter, Felipe and Ronald Garcia and {\'E}ric Tanter},
  title = {Gradual Type-and-Effect Systems},
  journal = jfp,
  year = 2016,
  pages = {19:1--19:69},
  publisher = cam,
  urlpdf = {http://pleiad.dcc.uchile.cl/papers/2016/banadosAl-jfp2016.pdf},
  urldoi = {http://dx.doi.org/10.1017/S0956796816000162},
  users = { etanter },
  volume = 26,
  month = sep,
}
@article{igarashiAl:icfp2017b,
  author = {Igarashi, Atsushi and Thiemann, Peter and Vasconcelos, Vasco T.   and Wadler, Philip},
  title = {Gradual Session Types},
  pages = {38:1--38:28},
  crossref = {icfp2017},
}
@misc{icfp2017,
  key = {ICFP 2017},
  journal = pacmpl,
  volume = 1,
  number = {ICFP},
  month = sep,
  year = 2017,
  publisher = acm,
}


@inproceedings{Pavlinovic15practical,
 author = {Pavlinovic, Zvonimir and King, Tim and Wies, Thomas},
 title = {Practical {SMT}-based Type Error Localization},
 booktitle = {Proceedings of the 20th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP 2015},
 year = {2015},
 isbn = {978-1-4503-3669-7},
 location = {Vancouver, BC, Canada},
 pages = {412--423},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2784731.2784765},
 doi = {10.1145/2784731.2784765},
 acmid = {2784765},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Polymorphic Types, Satisfiability Modulo Theories, Type Error Localization},
} 

@article{basicDepTutorial,
 author = {L\"{o}h, Andres and McBride, Conor and Swierstra, Wouter},
 title = {A Tutorial Implementation of a Dependently Typed Lambda Calculus},
 journal = {Fundam. Inf.},
 issue_date = {April 2010},
 volume = {102},
 number = {2},
 month = apr,
 year = {2010},
 issn = {0169-2968},
 pages = {177--207},
 numpages = {31},
 doi = {10.3233/FI-2010-304},
 url = {http://dl.acm.org/citation.cfm?id=1883634.1883637},
 acmid = {1883637},
 publisher = {IOS Press},
 address = {Amsterdam, The Netherlands, The Netherlands},
}
@incollection{unifSigma,
year={2011},
isbn={978-3-642-21690-9},
booktitle={Typed Lambda Calculi and Applications},
volume={6690},
series={Lecture Notes in Computer Science},
editor={Ong, Luke},
doi={10.1007/978-3-642-21691-6_5},
title={Higher-Order Dynamic Pattern Unification for Dependent Types and Records},
url={http://dx.doi.org/10.1007/978-3-642-21691-6_5},
publisher={Springer Berlin Heidelberg},
author={Abel, Andreas and Pientka, Brigitte},
pages={10-26},
language={English}
}
@article{localTypeInference,
 author = {Pierce, Benjamin C. and Turner, David N.},
 title = {Local Type Inference},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Jan. 2000},
 volume = {22},
 number = {1},
 month = jan,
 year = {2000},
 issn = {0164-0925},
 pages = {1--44},
 numpages = {44},
 url = {http://doi.acm.org/10.1145/345099.345100},
 doi = {10.1145/345099.345100},
 acmid = {345100},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {polymorphism, subtyping, type inference},
} 


@article{MillerUnif,
 author = {Miller, Dale},
 title = {Unification Under a Mixed Prefix},
 journal = {J. Symb. Comput.},
 issue_date = {Oct. 1992},
 volume = {14},
 number = {4},
 month = oct,
 year = {1992},
 issn = {0747-7171},
 pages = {321--358},
 numpages = {38},
 url = {http://dx.doi.org/10.1016/0747-7171(92)90011-R},
 doi = {10.1016/0747-7171(92)90011-R},
 acmid = {147067},
 publisher = {Academic Press, Inc.},
 address = {Duluth, MN, USA},
}

@phdthesis{gundryThesis,
  title={Type Inference, Haskell and Dependent Types},
  author={Adam Gundry},
  note={hhttp://adam.gundry.co.uk/pub/thesis/thesis-2013-12-03.pdf},
  year={2013},
  school={University of Strathclyde}
}

@misc{unifTutorial,
  title={A tutorial implementation of dynamic pattern unification},
  author={Gundry, Adam and McBride, Conor},
  journal={Unpublished draft},
  year={2013},
  howpublished={Unpublished draft, \url{http://adam.gundry.co.uk/pub/pattern-unify/pattern-unification-2012-07-10.pdf}}
}
@phdthesis{ulfThesis,
    author = {Ulf Norell},
    note={http://www.cse.chalmers.se/~ulfn/papers/thesis.pdf},
    title = {Towards a practical programming language based on dependent type theory},
    year = {2007},
    school = {Chalmers University of Technology}
}
@article{linearSpineCalc,
author = {Cervesato, Iliano and Pfenning, Frank},
title = {A Linear Spine Calculus},
volume = {13},
number = {5},
pages = {639-688},
year = {2003},
doi = {10.1093/logcom/13.5.639},
abstract ={We present the spine calculus S→⊸&⊤ as an efficient representation for the linear λ-calculus λ→⊸&⊤ which includes unrestricted functions (→) linear functions (⊸) additive pairing (&) and additive unit (⊤). S→⊸&⊤ enhances the representation of Church's simply typed λ-calculus by enforcing extensionality and by incorporating linear constructs. This approach permits procedures such as unification to retain the efficient head access that characterizes first-order term languages without the overhead of performing η-conversions at run time. Applications lie in proof search, logic programming, and logical frameworks based on linear type theories. It is also related to foundational work on term assignment calculi for presentations of the sequent calculus. We define the spine calculus, give translations of λ→⊸&⊤ into S→⊸&⊤ and vice versa, prove their soundness and completeness with respect to typing and reductions, and show that the typable fragment of the spine calculus is strongly normalizing and admits unique canonical, i.e. βη-normal, forms.},
URL = {http://logcom.oxfordjournals.org/content/13/5/639.abstract},
eprint = {http://logcom.oxfordjournals.org/content/13/5/639.full.pdf+html},
journal = {Journal of Logic and Computation}
}
@inproceedings{generalDiagnose,
 author = {Zhang, Danfeng and Myers, Andrew C.},
 title = {Toward General Diagnosis of Static Errors},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {569--581},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2535838.2535870},
 doi = {10.1145/2535838.2535870},
 acmid = {2535870},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {error diagnosis, information flow, static program analysis, type inference},
}
@inproceedings{sherrlocPaper,
 author = {Zhang, Danfeng and Myers, Andrew C. and Vytiniotis, Dimitrios and Peyton-Jones, Simon},
 title = {Diagnosing Type Errors with Class},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI 2015},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {12--21},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2737924.2738009},
 doi = {10.1145/2737924.2738009},
 acmid = {2738009},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Error diagnosis, Haskell, type inference},
}
@misc{SHErrLocWebsite,
  title = {{SHErrLoc} Project},
  year = {2016},
  howpublished = {\url{http://www.cs.cornell.edu/projects/SHErrLoc/}},
  note = {Accessed: 2015-12-16}
}
@article{constraintBasedHelium,
  title={Constraint based type inferencing in {Helium} },
  author={Heeren, Bastiaan and Hage, Jurriaan and Swierstra, S Doaitse},
  journal={Immediate Applications of Constraint Programming (ACP)},
  year={2003},
  pages={57}
}
@article{milnerAlgoW,
title = "A theory of type polymorphism in programming",
journal = "Journal of Computer and System Sciences",
volume = "17",
number = "3",
pages = "348 - 375",
year = "1978",
note = "",
issn = "0022-0000",
doi = "10.1016/0022-0000(78)90014-4",
url = "http://www.sciencedirect.com/science/article/pii/0022000078900144",
author = "Robin Milner",
}
@article{algoM,
 author = {Lee, Oukseh and Yi, Kwangkeun},
 title = {Proofs About a Folklore Let-polymorphic Type Inference Algorithm},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {July 1998},
 volume = {20},
 number = {4},
 month = jul,
 year = {1998},
 issn = {0164-0925},
 pages = {707--723},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/291891.291892},
 doi = {10.1145/291891.291892},
 acmid = {291892},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {type error, type inference algorithm},
}

@phdthesis{heerenThesis,
  title={Top quality type error messages},
  author={Heeren, Bastiaan J},
  note={{IPA} Dissertation Series, \url{https://dspace.library.uu.nl/handle/1874/7297}},
  year={2005},
  publisher={Utrecht University}
}

@misc{coqSite,
  title = {The {Coq} Theorem Prover},
  year = {2016},
  howpublished = {\url{https://coq.inria.fr/}},
  note = {Accessed: 2016-01-27}
}

@inproceedings{agdaPaper,
 author = {Norell, Ulf},
 title = {Dependently Typed Programming in {Agda}},
 booktitle = {Proceedings of the 4th International Workshop on Types in Language Design and Implementation},
 series = {TLDI '09},
 year = {2009},
 isbn = {978-1-60558-420-1},
 location = {Savannah, GA, USA},
 pages = {1--2},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/1481861.1481862},
 doi = {10.1145/1481861.1481862},
 acmid = {1481862},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependent types, programming},
} 

@article{idrisPaper, 
title={{Idris}, a general-purpose dependently typed programming language: Design and implementation}, 
volume={23}, 
DOI={10.1017/S095679681300018X},
 number={5}, 
 journal={Journal of Functional Programming}, 
 publisher={Cambridge University Press}, 
 author={Brady, Edwin}, 
 year={2013}, 
 pages={552–593}
 }

@misc{fSTarSite,
  title = {The {F*} Project},
  year = {2016},
  howpublished = {\url{http://research.microsoft.com/en-us/projects/fstar/}},
  note = {Accessed: 2016-01-27}
}

 @article{uniCoq, title={A comprehensible guide to a new unifier for {CIC} including universe polymorphism and overloading}, volume={27}, DOI={10.1017/S0956796817000028}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Ziliani, Beta and Sozeau, Matthieu}, year={2017}, pages={e10}}

@article{foetusPaper,
 author = {Abel, Andreas and Altenkirch, Thorsten},
 title = {A Predicative Analysis of Structural Recursion},
 journal = {J. Funct. Program.},
 issue_date = {January 2002},
 volume = {12},
 number = {1},
 month = jan,
 year = {2002},
 issn = {0956-7968},
 pages = {1--41},
 numpages = {41},
 url = {http://dx.doi.org/10.1017/S0956796801004191},
 doi = {10.1017/S0956796801004191},
 acmid = {968426},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@misc{agdaTerminate,
  title = {{Agda} termination checker},
  year = {2016},
  howpublished = {\url{http://wiki.portal.chalmers.se/agda/pmwiki.php?n=ReferenceManual.TerminationChecker}},
  note = {Accessed: 2016-02-03}
}

@book{cpdt,
 author = {Chlipala, Adam},
 title = {Certified Programming with Dependent Types: A Pragmatic Introduction to the {Coq} Proof Assistant},
 year = {2013},
 isbn = {0262026651, 9780262026659},
 publisher = {The MIT Press},
}

@article{migratingGradual,
 author = {Campora, John Peter and Chen, Sheng and Erwig, Martin and Walkingshaw, Eric},
 title = {Migrating Gradual Types},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {January 2018},
 volume = {2},
 number = {POPL},
 month = dec,
 year = {2017},
 issn = {2475-1421},
 pages = {15:1--15:29},
 articleno = {15},
 numpages = {29},
 url = {http://doi.acm.org/10.1145/3158103},
 doi = {10.1145/3158103},
 acmid = {3158103},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {gradual typing, program migration, variational types},
} 



@misc{typeErrorMessages,
  Author = {Serrano, Alejandro and Hage, Juriaan and Heeren, Bastiaan},
  Institution = {Universiteit Utrecht},
  Howpublished = {\url{http://www.cs.uu.nl/docs/vakken/apa/09alejandroslides.pdf}},
  Year = {June 10, 2014},
  Title = {{(Type)} Error Diagnosis}
}

@inproceedings{improvedReporting,
 author = {Yang, Jun and Michaelson, Greg and Trinder, Phil and Wells, J. B.},
 title = {Improved Type Error Reporting},
 booktitle = {Proceedings of the 12th International Workshop on Implementation of Functional Languages },
 series = {IFL '00},
 year = {September 2000},
 volume = {2011},
 journal = {Lecture Notes in Computer Science},
 pages = {71-86},
 numpages = {15},
 publisher = {Springer Verlag},
 address = {RWTH Aachen}
 }

@inproceedings{heuristicsTypeErrorDiscovery,
 author = {Hage, Jurriaan and Heeren, Bastiaan},
 title = {Heuristics for Type Error Discovery and Recovery},
 booktitle = {Proceedings of the 18th International Conference on Implementation and Application of Functional Languages},
 series = {IFL'06},
 year = {2007},
 isbn = {978-3-540-74129-9},
 location = {Budapest, Hungary},
 pages = {199--216},
 numpages = {18},
 url = {http://dl.acm.org/citation.cfm?id=1757028.1757040},
 acmid = {1757040},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {constraints, error messages, error recovery, heuristics, type graph, type inferencing},
} 

[download] 


@article{solvingStrategies,
 author = {Hage, Jurriaan and Heeren, Bastiaan},
 title = {Strategies for Solving Constraints in Type and Effect Systems},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {April, 2009},
 volume = {236},
 month = apr,
 year = {2009},
 issn = {1571-0661},
 pages = {163--183},
 numpages = {21},
 url = {http://dx.doi.org/10.1016/j.entcs.2009.03.021},
 doi = {10.1016/j.entcs.2009.03.021},
 acmid = {1519622},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {constraints, inference algorithms, solving strategies, type and effect systems}
}

@article{errorSlicing,
title = "Type error slicing in implicitly typed higher-order languages ",
journal = "Science of Computer Programming ",
volume = "50",
number = "1–3",
pages = "189 - 224",
year = "2004",
note = "12th European Symposium on Programming (ESOP 2003) ",
issn = "0167-6423",
doi = "10.1016/j.scico.2004.01.004",
url = "http://www.sciencedirect.com/science/article/pii/S016764230400005X",
author = "Christian Haack and J.B. Wells",
keywords = "Type error location",
keywords = "Type inference",
keywords = "Intersection types "
}

@TECHREPORT{Heeren01improvingtype-error,
    author = {Bastiaan Heeren and Johan Jeuring and Doaitse Swierstra and Pablo Azero Alcocer},
    title = {Improving Type-Error Messages in Functional Languages},
    institution = {},
    year = {2001}
}

@inproceedings{counterFactual,
 author = {Chen, Sheng and Erwig, Martin},
 title = {Counter-factual Typing for Debugging Type Errors},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {583--594},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2535838.2535863},
 doi = {10.1145/2535838.2535863},
 acmid = {2535863},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {change suggestions, choice types, error localization, type error messages, type inference, type-error debugging},
}

@article{ChoiceCalc,
 author = {Erwig, Martin and Walkingshaw, Eric},
 title = {The Choice Calculus: A Representation for Software Variation},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 issue_date = {December 2011},
 volume = {21},
 number = {1},
 month = dec,
 year = {2011},
 issn = {1049-331X},
 pages = {6:1--6:27},
 articleno = {6},
 numpages = {27},
 url = {http://doi.acm.org/10.1145/2063239.2063245},
 doi = {10.1145/2063239.2063245},
 acmid = {2063245},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Variation, representation},
}

@misc{idrisMutRec,
  author = { The {Idris} Community},
  title = {Documentation for the {Idris} Language},
  year = {2015},
  howpublished = {\url{http://docs.idris-lang.org/en/latest/tutorial/typesfuns.html}}
}

@misc{agdaMutRec,
  author = { Ulf Norell et. al.},
  title = {{Agda} Documentation},
  year = {2016},
  howpublished = {\url{http://agda.readthedocs.io/en/latest/language/mutual-recursion.html}}
}


@inproceedings{cockxunifiers,
 author = {Cockx, Jesper and Devriese, Dominique and Piessens, Frank},
 title = {Unifiers As Equivalences: Proof-relevant Unification of Dependently Typed Data},
 booktitle = {Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP 2016},
 year = {2016},
 isbn = {978-1-4503-4219-3},
 location = {Nara, Japan},
 pages = {270--283},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2951913.2951917},
 doi = {10.1145/2951913.2951917},
 acmid = {2951917},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Agda, Dependent Types, Inductive Families, Type Theory, Unification},
} 


@article{cockx_devriese_2018, title={Proof-relevant unification: Dependent pattern matching with only the axioms of your type theory}, volume={28}, DOI={10.1017/S095679681800014X}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Cockx, Jesper and Devriese, Dominique}, year={2018}, pages={e12}}


@misc{ourGH,
  author = {Eremondi, Joseph},
  title = {Github Repository: lambda-pi-constraint, tag thesis-final},
  year = {2016},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/JoeyEremondi/lambda-pi-constraint}},
}

@misc{heliumGithub,
  author = {{Helium} Team, The},
  title = {{Helium} Github Repository},
  year = {2017},
  publisher = {GitHub},
  howpublished = {\url{https://github.com/Helium4Haskell/helium}},
}

@inproceedings{damasMilner,
 author = {Damas, Luis and Milner, Robin},
 title = {Principal Type-schemes for Functional Programs},
 booktitle = {Proceedings of the 9th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '82},
 year = {1982},
 isbn = {0-89791-065-6},
 location = {Albuquerque, New Mexico},
 pages = {207--212},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/582153.582176},
 doi = {10.1145/582153.582176},
 acmid = {582176},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{withoutK,
 author = {Cockx, Jesper and Devriese, Dominique and Piessens, Frank},
 title = {Pattern Matching Without K},
 booktitle = {Proceedings of the 19th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '14},
 year = {2014},
 isbn = {978-1-4503-2873-9},
 location = {Gothenburg, Sweden},
 pages = {257--268},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2628136.2628139},
 doi = {10.1145/2628136.2628139},
 acmid = {2628139},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {agda, dependent pattern matching, homotopy type theory, k axiom},
} 

@article{sherrlocHolistic,
 author = {Zhang, Danfeng and Myers, Andrew C. and Vytiniotis, Dimitrios and Peyton-Jones, Simon},
 title = {SHErrLoc: A Static Holistic Error Locator},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {September 2017},
 volume = {39},
 number = {4},
 month = aug,
 year = {2017},
 issn = {0164-0925},
 pages = {18:1--18:47},
 articleno = {18},
 numpages = {47},
 url = {http://doi.acm.org/10.1145/3121137},
 doi = {10.1145/3121137},
 acmid = {3121137},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Error diagnosis, Haskell, Jif, OCaml, information flow, static program analysis, type inference},
}

@inproceedings{errTolChoice,
 author = {Chen, Sheng and Erwig, Martin and Walkingshaw, Eric},
 title = {An Error-tolerant Type System for Variational Lambda Calculus},
 booktitle = {Proceedings of the 17th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '12},
 year = {2012},
 isbn = {978-1-4503-1054-3},
 location = {Copenhagen, Denmark},
 pages = {29--40},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2364527.2364535},
 doi = {10.1145/2364527.2364535},
 acmid = {2364535},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {error-tolerant type systems, variational lambda calculus, variational type inference, variational types},
} 

@article{varInference,
 author = {Chen, Sheng and Erwig, Martin and Walkingshaw, Eric},
 title = {Extending Type Inference to Variational Programs},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {March 2014},
 volume = {36},
 number = {1},
 month = mar,
 year = {2014},
 issn = {0164-0925},
 pages = {1:1--1:54},
 articleno = {1},
 numpages = {54},
 url = {http://doi.acm.org/10.1145/2518190},
 doi = {10.1145/2518190},
 acmid = {2518190},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Variational lambda calculus, variational type inference, variational types},
} 
@TECHREPORT{hereditary,
author="Watkins, Kevin
and Cervesato, Iliano
and Pfenning, Frank
and Walker, David",
title="A Concurrent Logical Framework {I}: Judgments and Properties",
year="2003",
note={\url{https://www.cs.cmu.edu/~fp/papers/CMU-CS-02-101.pdf}},
publisher="School of Computer Science, Carnegie Mellon University",
number =        {CMU-CS-02-101},
howpublished = {Technical Report. \url{https://www.cs.cmu.edu/~fp/papers/CMU-CS-02-101.pdf} },
   publisher = {Technical Report, \url{https://www.cs.cmu.edu/~fp/papers/CMU-CS-02-101.pdf} },    
}

@InProceedings{lowLevelDep,
author="Condit, Jeremy
and Harren, Matthew
and Anderson, Zachary
and Gay, David
and Necula, George C.",
editor="De Nicola, Rocco",
title="Dependent Types for Low-Level Programming",
booktitle="Programming Languages and Systems",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="520--535",
abstract="In this paper, we describe the key principles of a dependent type system for low-level imperative languages. The major contributions of this work are (1) a sound type system that combines dependent types and mutation for variables and for heap-allocated structures in a more flexible way than before and (2) a technique for automatically inferring dependent types for local variables. We have applied these general principles to design Deputy, a dependent type system for C that allows the user to describe bounded pointers and tagged unions. Deputy has been used to annotate and check a number of real-world C programs.",
isbn="978-3-540-71316-6"
}

@inproceedings{empiricalErrorMessage,
 author = {Barik, Titus and others},
 title = {Do Developers Read Compiler Error Messages?},
 booktitle = {Proceedings of the 39th International Conference on Software Engineering},
 series = {ICSE '17},
 year = {2017},
 isbn = {978-1-5386-3868-2},
 location = {Buenos Aires, Argentina},
 pages = {575--585},
 numpages = {11},
 url = {https://doi.org/10.1109/ICSE.2017.59},
 doi = {10.1109/ICSE.2017.59},
 acmid = {3097437},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
 keywords = {compiler errors, eye tracking, integrated development environments, programmer comprehension, reading, visual attention},
} 

@incollection{MARTINLOUF197581,
title = "About Models for Intuitionistic Type Theories and the Notion of Definitional Equality",
editor = "Stig Kanger",
series = "Studies in Logic and the Foundations of Mathematics",
publisher = "Elsevier",
volume = "82",
pages = "81 - 109",
year = "1975",
booktitle = "Proceedings of the Third Scandinavian Logic Symposium",
issn = "0049-237X",
doi = "10.1016/S0049-237X(08)70727-4",
url = "http://www.sciencedirect.com/science/article/pii/S0049237X08707274",
author = "Per Martin-Löf"
},

@article{Harper:1993:FDL:138027.138060,
 author = {Harper, Robert and Honsell, Furio and Plotkin, Gordon},
 title = {A Framework for Defining Logics},
 journal = {J. ACM},
 issue_date = {Jan. 1993},
 volume = {40},
 number = {1},
 month = jan,
 year = {1993},
 issn = {0004-5411},
 pages = {143--184},
 numpages = {42},
 url = {http://doi.acm.org/10.1145/138027.138060},
 doi = {10.1145/138027.138060},
 acmid = {138060},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {formal systems, interactive theorem proving, proof checking, typed lambda calculus},
} 

@misc{reddit-agda,
  title = {/r/agda: R x → x == y → R y},
  year = {2016},
  howpublished = {\url{https://www.reddit.com/r/agda/comments/7lq44q/r_x_x_y_r_y/}},
  note = {Accessed: 2018-06-14},
  author = {/u/GNULinuxProgrammer}
}

@article{HUET197527,
title = "A unification algorithm for typed λ-calculus",
journal = "Theoretical Computer Science",
volume = "1",
number = "1",
pages = "27 - 57",
year = "1975",
issn = "0304-3975",
doi = "10.1016/0304-3975(75)90011-0",
url = "http://www.sciencedirect.com/science/article/pii/0304397575900110",
author = "G.P. Huet"
}

@article{HUET1973257,
title = "The undecidability of unification in third order logic",
journal = "Information and Control",
volume = "22",
number = "3",
pages = "257 - 267",
year = "1973",
issn = "0019-9958",
doi = "10.1016/S0019-9958(73)90301-X",
url = "http://www.sciencedirect.com/science/article/pii/S001999587390301X",
author = "Gerard P. Huet"
}

@article{mechanizingLF, title={Mechanizing metatheory in a logical framework}, volume={17}, DOI={10.1017/S0956796807006430}, number={4-5}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Harper,Robert and Licata, Daniel R.}, year={2007}, pages={613–673}}

@inproceedings{churchCurry,
   author = {Pfenning, Frank},
 title = {Church and Curry: Combining intrinsic and extrinisic typing},
  Isbn =	 {978-1-904987-70-3},
  Editor =	 {Christoph Benzm{\"u}ller and Chad Brown and J{\"o}rg Siekmann and Richard Statman},
  Publisher =	 {College Publications},
  Series =	 {Studies in Logic, Mathematical Logic and Foundations},
  booktitle =	 {Reasoning in Simple Type Theory -- Festschrift in Honor of {Peter B.~Andrews} on His 70th Birthday},
  Url = {http://www.collegepublications.co.uk/logic/mlf/?00010},
  Year =	 2008
}

@InProceedings{multisetOrder,
author="Dershowitz, Nachum
and Manna, Zohar",
editor="Maurer, Hermann A.",
title="Proving termination with multiset orderings",
booktitle="Automata, Languages and Programming",
year="1979",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="188--202",
abstract="A common tool for proving the termination of programs is the well-founded set, a set ordered in such a way as to admit no infinite descending sequences. The basic approach is to find a termination function that maps the values of the program variables into some well-founded set, such that the value of the termination function is continually reduced throughout the computation. All too often, the termination functions required are difficult to find and are of a complexity out of proportion to the program under consideration. However, by providing more sophisticated well-founded sets, the corresponding termination functions can be simplified.",
isbn="978-3-540-35168-9"
}

@InProceedings{refinedCriteria,
  author =	{Jeremy G. Siek and Michael M. Vitousek and Matteo Cimini and John Tang Boyland},
  title =	{{Refined Criteria for Gradual Typing}},
  booktitle =	{1st Summit on Advances in Programming Languages (SNAPL 2015)},
  pages =	{274--293},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-939897-80-4},
  ISSN =	{1868-8969},
  year =	{2015},
  volume =	{32},
  editor =	{Thomas Ball and Rastislav Bodik and Shriram Krishnamurthi and Benjamin S. Lerner and Greg Morrisett},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2015/5031},
  URN =		{urn:nbn:de:0030-drops-50312},
  doi =		{10.4230/LIPIcs.SNAPL.2015.274},
  annote =	{Keywords: gradual typing, type systems, semantics, dynamic languages}
}

@INPROCEEDINGS{gradualTypeInitial,
    author = {Jeremy G. Siek and Walid Taha},
    title = {Gradual Typing for Functional Languages},
    booktitle = {Scheme and Functional Programming Workshop},
    year = {2006},
    pages = {81--92},
    publisher = {}
}

@article{predSysF,
  author    = {Cyprien Mangin and
               Matthieu Sozeau},
  title     = {Equations for Hereditary Substitution in Leivant's Predicative System
               {F:} {A} Case Study},
  journal   = {CoRR},
  volume    = {abs/1508.00455},
  year      = {2015},
  url       = {http://arxiv.org/abs/1508.00455},
  archivePrefix = {arXiv},
  eprint    = {1508.00455},
  timestamp = {Mon, 13 Aug 2018 16:48:30 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/ManginS15},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{agt,
 author = {Garcia, Ronald and Clark, Alison M. and Tanter, \'{E}ric},
 title = {Abstracting Gradual Typing},
 booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '16},
 year = {2016},
 isbn = {978-1-4503-3549-2},
 location = {St. Petersburg, FL, USA},
 pages = {429--442},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2837614.2837670},
 doi = {10.1145/2837614.2837670},
 acmid = {2837670},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract interpretation, gradual typing, subtyping},
} 

@misc{parametricityRevisited,
    title={Gradual Parametricity, Revisited},
    author={Matías Toro and Elizabeth Labrada and Éric Tanter},
    year={2018},
    eprint={1807.04596},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@InProceedings{undecideInference,
author="Dowek, Gilles",
editor="Bezem, Marc
and Groote, Jan Friso",
title="The undecidability of typability in the Lambda-Pi-calculus",
booktitle="Typed Lambda Calculi and Applications",
year="1993",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="139--145",
abstract="The set of pure terms which are typable in the $\lambda$II-calculus in a given context is not recursive. So there is no general type inference algorithm for the programming language Elf and, in some cases, some type information has to be mentioned by the programmer.",
isbn="978-3-540-47586-6"
}

@techreport{coquand:inria-00076023,
  TITLE = {{An analysis of Girard's paradox}},
  AUTHOR = {Coquand, T.},
  URL = {https://hal.inria.fr/inria-00076023},
  NUMBER = {RR-0531},
  INSTITUTION = {{INRIA}},
  YEAR = {1986},
  MONTH = May,
  PDF = {https://hal.inria.fr/inria-00076023/file/RR-0531.pdf},
  HAL_ID = {inria-00076023},
  HAL_VERSION = {v1},
}



@incollection{Barendregt:1993:LCT:162552.162561,
 author = {Barendregt, H. P.},
 chapter = {Lambda Calculi with Types},
 title = {Handbook of Logic in Computer Science (Vol. 2)},
 editor = {Abramsky, S. and Gabbay, Dov M. and Maibaum, S. E.},
 year = {1992},
 isbn = {0-19-853761-1},
 pages = {117--309},
 numpages = {193},
 url = {http://dl.acm.org/citation.cfm?id=162552.162561},
 acmid = {162561},
 publisher = {Oxford University Press, Inc.},
 address = {New York, NY, USA},
} 

@inproceedings{eades2010hereditary,
  title={Hereditary substitution for stratified system {F} },
  author={Eades, Harley and Stump, Aaron},
  booktitle={International Workshop on Proof-Search in Type Theories, PSTT},
  volume={10},
  year={2010}
}

@inproceedings{Garcia:2015:PTS:2676726.2676992,
 author = {Garcia, Ronald and Cimini, Matteo},
 title = {Principal Type Schemes for Gradual Programs},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {303--315},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2676726.2676992},
 doi = {10.1145/2676726.2676992},
 acmid = {2676992},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {gradual typing, type inference},
} 

@article{Ahmed:2011:BLA:1925844.1926409,
 author = {Ahmed, Amal and Findler, Robert Bruce and Siek, Jeremy G. and Wadler, Philip},
 title = {Blame for All},
 journal = {SIGPLAN Not.},
 issue_date = {January 2011},
 volume = {46},
 number = {1},
 month = jan,
 year = {2011},
 issn = {0362-1340},
 pages = {201--214},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1925844.1926409},
 doi = {10.1145/1925844.1926409},
 acmid = {1926409},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {blame tracking, casts, coercions, lambda-calculus},
} 

@article{dagand_tabareau_tanter_2018, title={Foundations of dependent interoperability}, volume={28}, DOI={10.1017/S0956796818000011}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Dagand, Pierre-Évariste and Tabareau, Nicolas and Tanter, Éric}, year={2018}, pages={e9}}

@InProceedings{10.1007/1-4020-8141-3_34,
author="Ou, Xinming
and Tan, Gang
and Mandelbaum, Yitzhak
and Walker, David",
editor="Levy, Jean-Jacques
and Mayr, Ernst W.
and Mitchell, John C.",
title="Dynamic Typing with Dependent Types",
booktitle="Exploring New Frontiers of Theoretical Informatics",
year="2004",
publisher="Springer US",
address="Boston, MA",
pages="437--450",
abstract="Dependent type systems are promising tools programmers can use to increase the reliability and security of their programs. Unfortunately, dependently-typed programming languages require programmers to annotate their programs with many typing specifications to help guide the type checker. This paper shows how to make the process of programming with dependent types more palatable by defining a language in which programmers have fine-grained control over the trade-off between the number of dependent typing annotations they must place on programs and the degree of compile-time safety. More specifically, certain program fragments are marked dependent, in which case the programmer annotates them in detail and a dependent type checker verifies them at compile time. Other fragments are marked simple, in which case they may be annotation-free and dependent constraints are verified at run time.",
isbn="978-1-4020-8141-5"
}

@inproceedings{Tanter:2015:GCP:2816707.2816710,
 author = {Tanter, \'{E}ric and Tabareau, Nicolas},
 title = {Gradual Certified Programming in Coq},
 booktitle = {Proceedings of the 11th Symposium on Dynamic Languages},
 series = {DLS 2015},
 year = {2015},
 isbn = {978-1-4503-3690-1},
 location = {Pittsburgh, PA, USA},
 pages = {26--40},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/2816707.2816710},
 doi = {10.1145/2816707.2816710},
 acmid = {2816710},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Certified programming, Coq, casts, gradual typing, program extraction, refinements, subset types},
} 

@inproceedings{Lehmann:2017:GRT:3009837.3009856,
 author = {Lehmann, Nico and Tanter, \'{E}ric},
 title = {Gradual Refinement Types},
 booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL 2017},
 year = {2017},
 isbn = {978-1-4503-4660-3},
 location = {Paris, France},
 pages = {775--788},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/3009837.3009856},
 doi = {10.1145/3009837.3009856},
 acmid = {3009856},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract interpretation, gradual typing, refinement types},
} 

@inproceedings{Findler:2002:CHF:581478.581484,
 author = {Findler, Robert Bruce and Felleisen, Matthias},
 title = {Contracts for Higher-order Functions},
 booktitle = {Proceedings of the Seventh ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '02},
 year = {2002},
 isbn = {1-58113-487-8},
 location = {Pittsburgh, PA, USA},
 pages = {48--59},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/581478.581484},
 doi = {10.1145/581478.581484},
 acmid = {581484},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {behavioral specifications, contracts, higher-order functions, predicate typing, solfware reliability},
} 

@article{DBLP:journals/corr/abs-1805-00155,
 author = {Omar, Cyrus and Voysey, Ian and Chugh, Ravi and Hammer, Matthew A.},
 title = {Live Functional Programming with Typed Holes},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {January 2019},
 volume = {3},
 number = {POPL},
 month = jan,
 year = {2019},
 issn = {2475-1421},
 pages = {14:1--14:32},
 articleno = {14},
 numpages = {32},
 url = {http://doi.acm.org/10.1145/3290327},
 doi = {10.1145/3290327},
 acmid = {3290327},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {contextual modal type theory, gradual typing, live programming, structured editing, typed holes},
} 

@article{SHEARD2007105,
title = "Type-level Computation Using Narrowing in $\Omega$mega",
journal = "Electronic Notes in Theoretical Computer Science",
volume = "174",
number = "7",
pages = "105 - 128",
year = "2007",
note = "Proceedings of the Programming Languages meets Program Verification (PLPV 2006)",
issn = "1571-0661",
doi = "https://doi.org/10.1016/j.entcs.2006.10.040",
url = "http://www.sciencedirect.com/science/article/pii/S1571066107002551",
author = "Tim Sheard",
keywords = "Programming languages, logical systems, theorem provers, narrowing, Curry-Howard isomorphism"
}

@InProceedings{10.1007/978-3-540-24849-1_25,
author="Xi, Hongwei",
editor="Berardi, Stefano
and Coppo, Mario
and Damiani, Ferruccio",
title="Applied Type System",
booktitle="Types for Proofs and Programs",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="394--408",
abstract="The framework Pure Type System ({\$}{\backslash}mathcal{\{}PTS{\}}{\$}) offers a simple and general approach to designing and formalizing type systems. However, in the presence of dependent types, there often exist some acute problems that make it difficult for {\$}{\backslash}mathcal{\{}PTS{\}}{\$}to accommodate many common realistic programming features such as general recursion, recursive types, effects (e.g., exceptions, references, input/output), etc. In this paper, we propose a new framework Applied Type System ({\$}{\backslash}mathcal{\{}ATS{\}}{\$}) to allow for designing and formalizing type systems that can readily support common realistic programming features. The key salient feature of {\$}{\backslash}mathcal{\{}ATS{\}}{\$}lies in a complete separation between statics, in which types are formed and reasoned about, and dynamics, in which programs are constructed and evaluated. With this separation, it is no longer possible for a program to occur in a type as is otherwise allowed in {\$}{\backslash}mathcal{\{}PTS{\}}{\$}. We present not only a formal development of {\$}{\backslash}mathcal{\{}ATS{\}}{\$}but also mention some examples in support of using {\$}{\backslash}mathcal{\{}ATS{\}}{\$}as a framework to form type systems for practical programming.",
isbn="978-3-540-24849-1"
}



[download] 
}

@article{Nanevski:2008:CMT:1352582.1352591,
 author = {Nanevski, Aleksandar and Pfenning, Frank and Pientka, Brigitte},
 title = {Contextual Modal Type Theory},
 journal = {ACM Trans. Comput. Logic},
 issue_date = {June 2008},
 volume = {9},
 number = {3},
 month = jun,
 year = {2008},
 issn = {1529-3785},
 pages = {23:1--23:49},
 articleno = {23},
 numpages = {49},
 url = {http://doi.acm.org/10.1145/1352582.1352591},
 doi = {10.1145/1352582.1352591},
 acmid = {1352591},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Type theory, intuitionistic modal logic, logical frameworks},
} 
@inproceedings{Pientka:2008:PPE:1389449.1389469,
 author = {Pientka, Brigitte and Dunfield, Joshua},
 title = {Programming with Proofs and Explicit Contexts},
 booktitle = {Proceedings of the 10th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming},
 series = {PPDP '08},
 year = {2008},
 isbn = {978-1-60558-117-0},
 location = {Valencia, Spain},
 pages = {163--173},
 numpages = {11},
 url = {http://doi.acm.org.ezproxy.library.ubc.ca/10.1145/1389449.1389469},
 doi = {10.1145/1389449.1389469},
 acmid = {1389469},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependent types, logical frameworks, type theory},
} 
@Article{Dybjer1994,
author="Dybjer, Peter",
title="Inductive families",
journal="Formal Aspects of Computing",
year="1994",
month="Jul",
day="01",
volume="6",
number="4",
pages="440--465",
abstract="A general formulation of inductive and recursive definitions in Martin-L{\"o}f's type theory is presented. It extends Backhouse's `Do-It-Yourself Type Theory' to include inductive definitions of families of sets and definitions of functions by recursion on the way elements of such sets are generated. The formulation is in natural deduction and is intended to be a natural generalisation to type theory of Martin-L{\"o}f's theory of iterated inductive definitions in predicate logic.",
issn="1433-299X",
doi="10.1007/BF01211308",
url="https://doi.org/10.1007/BF01211308"
}

@inproceedings{Siek:2009:TWB:1570506.1570511,
 author = {Siek, Jeremy G. and Wadler, Philip},
 title = {Threesomes, with and Without Blame},
 booktitle = {Proceedings for the 1st Workshop on Script to Program Evolution},
 series = {STOP '09},
 year = {2009},
 isbn = {978-1-60558-543-7},
 location = {Genova, Italy},
 pages = {34--46},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1570506.1570511},
 doi = {10.1145/1570506.1570511},
 acmid = {1570511},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@InProceedings{10.1007/978-3-642-00590-9_1,
author="Wadler, Philip
and Findler, Robert Bruce",
editor="Castagna, Giuseppe",
title="Well-Typed Programs Can't Be Blamed",
booktitle="Programming Languages and Systems",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="1--16",
abstract="We introduce the blame calculus, which adds the notion of blame from Findler and Felleisen's contracts to a system similar to Siek and Taha's gradual types and Flanagan's hybrid types. We characterise where positive and negative blame can arise by decomposing the usual notion of subtype into positive and negative subtypes, and show that these recombine to yield naive subtypes. Naive subtypes previously appeared in type systems that are unsound, but we believe this is the first time naive subtypes play a role in establishing type soundness.",
isbn="978-3-642-00590-9"
}

@Article{eremondiSwierstraHage,
author="Joseph Eremondi and Wouter Swierstra and Jurriaan Hage",
title="A framework for improving error messages in dependently typed languages",
journal="Open Computer Science (to appear)",
volume = {Topical issue on type error diagnosis},
year = {2018}
}

@article{Castagna:2017:GTU:3136534.3110285,
 author = {Castagna, Giuseppe and Lanvin, Victor},
 title = {Gradual Typing with Union and Intersection Types},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {September 2017},
 volume = {1},
 number = {ICFP},
 month = aug,
 year = {2017},
 issn = {2475-1421},
 pages = {41:1--41:28},
 articleno = {41},
 numpages = {28},
 url = {http://doi.acm.org/10.1145/3110285},
 doi = {10.1145/3110285},
 acmid = {3110285},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Gradual typing, intersection types, negation types, set-theoretic types, union types},
} 

@INPROCEEDINGS{6595831,
author={L. Fennell and P. Thiemann},
booktitle={2013 IEEE 26th Computer Security Foundations Symposium},
title={Gradual Security Typing with References},
year={2013},
volume={},
number={},
pages={224-239},
keywords={ML language;program diagnostics;security of data;gradual security typing;information-flow control;IFC;dynamic run-time monitoring;permissive dynamic checking;conservative static type system;ML-GS;reference type;static checking;security cast;higher-order function;monomorphic ML core language;Security;Context;Standards;Syntactics;Monitoring;Radiation detectors;Semantics;gradual typing;security typing;ML;references},
doi={10.1109/CSF.2013.22},
ISSN={2377-5459},
month={June},}

@inproceedings{Takikawa:2012:GTF:2384616.2384674,
 author = {Takikawa, Asumu and Strickland, T. Stephen and Dimoulas, Christos and Tobin-Hochstadt, Sam and Felleisen, Matthias},
 title = {Gradual Typing for First-class Classes},
 booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
 series = {OOPSLA '12},
 year = {2012},
 isbn = {978-1-4503-1561-6},
 location = {Tucson, Arizona, USA},
 pages = {793--810},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/2384616.2384674},
 doi = {10.1145/2384616.2384674},
 acmid = {2384674},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {blame theorem (proof technique), contracts, design by contract, first-class classes, gradual typing, row polymorphism, sealing},
} 
@article{PFENNING200084,
title = "Structural Cut Elimination: I. Intuitionistic and Classical Logic",
journal = "Information and Computation",
volume = "157",
number = "1",
pages = "84 - 141",
year = "2000",
issn = "0890-5401",
doi = "https://doi.org/10.1006/inco.1999.2832",
url = "http://www.sciencedirect.com/science/article/pii/S0890540199928328",
author = "Frank Pfenning",
abstract = "We present new variants of known proofs of cut elimination for intuitionistic and classical sequent calculi. In both cases the proofs proceed by three nested structural inductions, avoiding the explicit use of multi-sets and termination measures on sequent derivations. This makes them amenable to elegant and concise representations in LF, which are given in full detail."
}

@inproceedings{Cousot:1977:AIU:512950.512973,
 author = {Cousot, Patrick and Cousot, Radhia},
 title = {Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints},
 booktitle = {Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL '77},
 year = {1977},
 location = {Los Angeles, California},
 pages = {238--252},
 numpages = {15},
 url = {http://doi.acm.org.ezproxy.library.ubc.ca/10.1145/512950.512973},
 doi = {10.1145/512950.512973},
 acmid = {512973},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@InProceedings{10.1007/978-3-319-89884-1_9,
author="P{\'e}drot, Pierre-Marie
and Tabareau, Nicolas",
editor="Ahmed, Amal",
title="Failure is Not an Option",
booktitle="Programming Languages and Systems",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="245--271",
abstract="We define the exceptional translation, a syntactic translation of the Calculus of Inductive Constructions (CIC) into itself, that covers full dependent elimination. The new resulting type theory features call-by-name exceptions with decidable type-checking and canonicity, but at the price of inconsistency. Then, noticing parametricity amounts to Kreisel's realizability in this setting, we provide an additional layer on top of the exceptional translation in order to tame exceptions and ensure that all exceptions used locally are caught, leading to the parametric exceptional translation which fully preserves consistency. This way, we can consistently extend the logical expressivity of CIC with independence of premises, Markov's rule, and the negation of function extensionality while retaining {\$}{\$}{\backslash}eta {\$}{\$}$\eta$-expansion. As a byproduct, we also show that Markov's principle is not provable in CIC. Both translations have been implemented in a Coq plugin, which we use to formalize the examples.",
isbn="978-3-319-89884-1"
}

@INPROCEEDINGS{8005113,
author={P. {Pédrot} and N. {Tabareau}},
booktitle={2017 32nd Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)},
title={An effectful way to eliminate addiction to dependence},
year={2017},
volume={},
number={},
pages={1-12},
keywords={program interpreters;monadic translation;dependent type theory;weaning translation;exception operation;nontermination operation;nondeterminism operation;writing operation;call-by-push-value decomposition;calculus of inductive constructions;CIC;parametricity techniques;Algebra;Syntactics;Mathematical model;Writing;Functional programming;Coherence;Calculus},
doi={10.1109/LICS.2017.8005113},
ISSN={},
month={June},}



@inproceedings{Osera:2012:DI:2103776.2103779,
 author = {Osera, Peter-Michael and Sj\"{o}berg, Vilhelm and Zdancewic, Steve},
 title = {Dependent Interoperability},
 booktitle = {Proceedings of the Sixth Workshop on Programming Languages Meets Program Verification},
 series = {PLPV '12},
 year = {2012},
 isbn = {978-1-4503-1125-0},
 location = {Philadelphia, Pennsylvania, USA},
 pages = {3--14},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2103776.2103779},
 doi = {10.1145/2103776.2103779},
 acmid = {2103779},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {contracts, dependent types, language interoperability},
} 

@inproceedings{Sekiyama:2015:MCD:2676726.2676996,
 author = {Sekiyama, Taro and Nishida, Yuki and Igarashi, Atsushi},
 title = {Manifest Contracts for Datatypes},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {195--207},
 numpages = {13},
 url = {http://doi.acm.org.ezproxy.library.ubc.ca/10.1145/2676726.2676996},
 doi = {10.1145/2676726.2676996},
 acmid = {2676996},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {algebraic datatypes, contract checking, datatype translation, refinement types},
} 
@Inproceedings{EPTCS76.9,
  author    = {Sj\"oberg, Vilhelm and Casinghino, Chris and Ahn, Ki Yung and Collins, Nathan and  Eades III, Harley D.  and Fu, Peng and Kimmell, Garrin and Sheard, Tim and Stump, Aaron and Weirich, Stephanie},
  year      = {2012},
  title     = {Irrelevance, Heterogeneous Equality, and Call-by-value Dependent Type Systems},
  editor    = {Chapman, James and Levy, Paul Blain},
  booktitle = {{\rm Proceedings Fourth Workshop on}
               Mathematically Structured Functional Programming,
               {\rm Tallinn, Estonia, 25 March 2012}},
  series    = {Electronic Proceedings in Theoretical Computer Science},
  volume    = {76},
  publisher = {Open Publishing Association},
  pages     = {112-162},
  doi       = {10.4204/EPTCS.76.9},
}



@inproceedings{Casinghino:2014:CPP:2535838.2535883,
 author = {Casinghino, Chris and Sj\"{o}berg, Vilhelm and Weirich, Stephanie},
 title = {Combining Proofs and Programs in a Dependently Typed Language},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {33--45},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2535838.2535883},
 doi = {10.1145/2535838.2535883},
 acmid = {2535883},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependent types, general recursion, termination},
} 

@inproceedings{Cimini:2016:GMA:2837614.2837632,
 author = {Cimini, Matteo and Siek, Jeremy G.},
 title = {The Gradualizer: A Methodology and Algorithm for Generating Gradual Type Systems},
 booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '16},
 year = {2016},
 isbn = {978-1-4503-3549-2},
 location = {St. Petersburg, FL, USA},
 pages = {443--455},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2837614.2837632},
 doi = {10.1145/2837614.2837632},
 acmid = {2837632},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {gradual typing, methodology, semantics, type systems},
} 
@article{COQUAND198895,
title = "The calculus of constructions",
journal = "Information and Computation",
volume = "76",
number = "2",
pages = "95 - 120",
year = "1988",
issn = "0890-5401",
doi = "https://doi.org/10.1016/0890-5401(88)90005-3",
url = "http://www.sciencedirect.com/science/article/pii/0890540188900053",
author = "Thierry Coquand and Gérard Huet"
}

@article{stump_2017, title={The calculus of dependent lambda eliminations}, volume={27}, DOI={10.1017/S0956796817000053}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Stump, Aaron}, year={2017}, pages={e14}}


@misc{nguyen2018sizechange,
    title={Size-Change Termination as a Contract},
    author={Phuc C. Nguyen and Thomas Gilray and Sam Tobin-Hochstadt and David Van Horn},
    year={2018},
    eprint={1808.02101},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@inproceedings{dagandAl:icfp2016,
  author = {Dagand, Pierre-Evariste and Nicolas Tabareau and {\'Eric Tanter}},
  title = {Partial Type Equivalences for Verified Dependent Interoperability},
  crossref = {icfp2016},
  pages = {298--310},
}

@proceedings{icfp2016,
  key = {ICFP 2016},
  booktitle = {Proceedings of the 21st ACM SIGPLAN Conference on Functional Programming (ICFP 2016)},
  title = {Proceedings of the 21st ACM SIGPLAN Conference on Functional Programming (ICFP 2016)},
  year = 2016,
  address = {Nara, Japan},
  month = sep,
  publisher = ACM,
}

@inproceedings{DBLP:conf/types/BradyMM03,
  author    = {Edwin Brady and
               Conor McBride and
               James McKinna},
  title     = {Inductive Families Need Not Store Their Indices},
  booktitle = {Types for Proofs and Programs, International Workshop, {TYPES} 2003,
               Torino, Italy, April 30 - May 4, 2003, Revised Selected Papers},
  pages     = {115--129},
  year      = {2003},
  crossref  = {DBLP:conf/types/2003},
  url       = {https://doi.org/10.1007/978-3-540-24849-1\_8},
  doi       = {10.1007/978-3-540-24849-1\_8},
  timestamp = {Thu, 15 Jun 2017 21:39:32 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/types/BradyMM03},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@proceedings{DBLP:conf/types/2003,
  editor    = {Stefano Berardi and
               Mario Coppo and
               Ferruccio Damiani},
  title     = {Types for Proofs and Programs, International Workshop, {TYPES} 2003,
               Torino, Italy, April 30 - May 4, 2003, Revised Selected Papers},
  series    = {Lecture Notes in Computer Science},
  volume    = {3085},
  publisher = {Springer},
  year      = {2004},
  url       = {https://doi.org/10.1007/b98246},
  doi       = {10.1007/b98246},
  isbn      = {3-540-22164-6},
  timestamp = {Thu, 15 Jun 2017 21:39:32 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/types/2003},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{siekVachharajani:dls2008,
  author = {Siek, Jeremy G. and  Manish Vachharajani},
  title = {Gradual typing with unification-based inference},
  crossref = {dls2008},
}

@Proceedings{dls2008,
  key = {DLS 2008},
  booktitle = {Proceedings of the 4th {ACM} Dynamic Languages Symposium (DLS 2008)},
  title = {Proceedings of the 4th {ACM} Dynamic Languages Symposium (DLS 2008)},
  year =      2008,
  address =      {Paphos, Cyprus},
  month =        jul,
  publisher =     ACM,
}

@article{DBLP:journals/pacmpl/OmarVCH19,
  author    = {Cyrus Omar and
               Ian Voysey and
               Ravi Chugh and
               Matthew A. Hammer},
  title     = {Live functional programming with typed holes},
  journal   = {{PACMPL}},
  volume    = {3},
  number    = {{POPL}},
  pages     = {14:1--14:32},
  year      = {2019},
  url       = {https://dl.acm.org/citation.cfm?id=3290327},
  timestamp = {Tue, 22 Jan 2019 15:27:56 +0100},
  biburl    = {https://dblp.org/rec/bib/journals/pacmpl/OmarVCH19},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cefp/SheardL07,
  author    = {Tim Sheard and
               Nathan Linger},
  title     = {Programming in Omega},
  booktitle = {Central European Functional Programming School, Second Summer School,
               {CEFP} 2007, Cluj-Napoca, Romania, June 23-30, 2007, Revised Selected
               Lectures},
  pages     = {158--227},
  year      = {2007},
  crossref  = {DBLP:conf/cefp/2007},
  url       = {https://doi.org/10.1007/978-3-540-88059-2\_5},
  doi       = {10.1007/978-3-540-88059-2\_5},
  timestamp = {Tue, 13 Jun 2017 10:37:56 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/cefp/SheardL07},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@proceedings{DBLP:conf/cefp/2007,
  editor    = {Zolt{\'{a}}n Horv{\'{a}}th and
               Rinus Plasmeijer and
               Anna So{\'{o}}s and
               Vikt{\'{o}}ria Zs{\'{o}}k},
  title     = {Central European Functional Programming School, Second Summer School,
               {CEFP} 2007, Cluj-Napoca, Romania, June 23-30, 2007, Revised Selected
               Lectures},
  series    = {Lecture Notes in Computer Science},
  volume    = {5161},
  publisher = {Springer},
  year      = {2008},
  url       = {https://doi.org/10.1007/978-3-540-88059-2},
  doi       = {10.1007/978-3-540-88059-2},
  isbn      = {978-3-540-88058-5},
  timestamp = {Tue, 13 Jun 2017 10:37:56 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/cefp/2007},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{mumon,
  author = {Nikhil Swamy and
            C\u{a}t\u{a}lin Hri\c{t}cu and
            Chantal Keller and
            Aseem Rastogi and
            Antoine Delignat-Lavaud and
            Simon Forest and
            Karthikeyan Bhargavan and
            C\'{e}dric Fournet and
            Pierre-Yves Strub and
            Markulf Kohlweiss and
            Jean-Karim Zinzindohou\'e and
            Santiago {Zanella-B\'eguelin}},
  title = {Dependent Types and Multi-Monadic Effects in {F*}},
  booktitle = {43rd ACM SIGPLAN-SIGACT
    Symposium on Principles of Programming Languages (POPL)},
  shortbooktitle = {POPL},
  pages = {256-270},
  publisher = {ACM},
  isbn = {978-1-4503-3549-2},
  month = jan,
  year = {2016},
  ee = {http://dx.doi.org/10.1145/2837614.2837655},
  url = {https://www.fstar-lang.org/papers/mumon/},
}


@inproceedings{Chen:2005:CPT:1086365.1086375,
 author = {Chen, Chiyan and Xi, Hongwei},
 title = {Combining Programming with Theorem Proving},
 booktitle = {Proceedings of the Tenth ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '05},
 year = {2005},
 isbn = {1-59593-064-7},
 location = {Tallinn, Estonia},
 pages = {66--77},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1086365.1086375},
 doi = {10.1145/1086365.1086375},
 acmid = {1086375},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {ATS, applied type system, dependent types, proof erasure, theorem proving},
} 

@inproceedings{DBLP:conf/icfp/JiaVMZZSZ08,
  author    = {Limin Jia and
               Jeffrey A. Vaughan and
               Karl Mazurak and
               Jianzhou Zhao and
               Luke Zarko and
               Joseph Schorr and
               Steve Zdancewic},
  title     = {{AURA:} a programming language for authorization and audit},
  booktitle = {Proceeding of the 13th {ACM} {SIGPLAN} international conference on
               Functional programming, {ICFP} 2008, Victoria, BC, Canada, September
               20-28, 2008},
  pages     = {27--38},
  year      = {2008},
  crossref  = {DBLP:conf/icfp/2008},
  url       = {https://doi.org/10.1145/1411204.1411212},
  doi       = {10.1145/1411204.1411212},
  timestamp = {Tue, 06 Nov 2018 16:59:24 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/icfp/JiaVMZZSZ08},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@proceedings{DBLP:conf/icfp/2008,
  editor    = {James Hook and
               Peter Thiemann},
  title     = {Proceeding of the 13th {ACM} {SIGPLAN} international conference on
               Functional programming, {ICFP} 2008, Victoria, BC, Canada, September
               20-28, 2008},
  publisher = {{ACM}},
  year      = {2008},
  isbn      = {978-1-59593-919-7},
  timestamp = {Fri, 23 Jan 2009 12:52:56 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/icfp/2008},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Xi1999,
 author = {Xi, Hongwei and Pfenning, Frank},
 title = {Dependent Types in Practical Programming},
 booktitle = {Proceedings of the 26th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '99},
 year = {1999},
 isbn = {1-58113-095-3},
 location = {San Antonio, Texas, USA},
 pages = {214--227},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/292540.292560},
 doi = {10.1145/292540.292560},
 acmid = {292560},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{FtoTAL,
 author = {Morrisett, Greg and Walker, David and Crary, Karl and Glew, Neal},
 title = {From System F to Typed Assembly Language},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {May 1999},
 volume = {21},
 number = {3},
 month = may,
 year = {1999},
 issn = {0164-0925},
 pages = {527--568},
 numpages = {42},
 url = {http://doi.acm.org/10.1145/319301.319345},
 doi = {10.1145/319301.319345},
 acmid = {319345},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {certified code, closure conversion, secure extensible systems, type-directed compilation, typed assembly language, typed intermediate languages},
} 

